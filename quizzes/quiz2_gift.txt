// Quiz 2 - CITS3003 Computer Graphics
// GIFT format for Moodle import

// Instructions
::Quiz 2 - CITS3003 Computer Graphics::
This is a 30-minute closed-book quiz. Answer all questions. Each question is worth equal marks. Total marks: 20

// Part A: True/False Questions
::Part A - True/False (10 marks)::
Adding two point positions (e.g., coordinates of two distinct points) together yields another meaningful point in space.{F}

The Model matrix is used to transform coordinates from an object's local model space into the common world coordinate space.{T}

The View matrix (camera transform) is generally the inverse of the camera's world transform – effectively converting world coordinates to a camera-centric coordinate system with the camera at the origin.{T}

Using a negative scale factor (e.g., scaling by -1 on an axis) will mirror or reflect an object across the corresponding axis.{T}

In a perspective projection, the farther an object is from the camera, the smaller it appears on the projected image.{T}

A uniform scale (scaling an object equally on all axes) will distort the object's shape and angles.{F}

In a 4×4 homogeneous transformation matrix, the rightmost column (excluding the bottom element) represents the translation components of the transform.{T}

Event-driven input mode (as used in interactive graphics programs) utilizes an event queue and callback functions, rather than forcing the program to halt and wait for each input.{T}

By default, OpenGL will render both the front and back faces of polygons (no back-face culling is active unless explicitly enabled).{T}

In modern OpenGL, we still use glBegin/glEnd and glVertex calls to submit geometry to the pipeline.{F}

// Part B: Multiple Choice Questions
::Part B - Multiple Choice (10 marks)::
To rotate an object about an arbitrary point (pivot) in space (not at the origin), one typically must:{
=Translate the object so that the pivot point aligns with the origin, then apply the rotation, then translate back to the original location.
~Directly apply the rotation about that pivot in one step; no translation is ever needed for off-origin rotations.
~Rotate the world instead of the object.
~Convert the rotation to Euler angles first.
}

In GLSL (OpenGL Shading Language), a uniform variable is one that:{
=is set by the application and remains constant for all vertices/fragments for a draw call (e.g., a single overall transformation matrix or color).
~varies for each vertex (like position inputs).
~is an output from the fragment shader to the framebuffer.
~has the same value across all applications (a built-in constant).
}

In the graphics pipeline, what is the perspective divide?{
=The step where clip-space coordinates (x,y,z,w) are divided by w to produce normalized device coordinates.
~Splitting the view frustum into near and far sections for LOD (level of detail).
~Halving the field-of-view angle to simulate perspective.
~A special matrix that handles perspective projection.
}

Which of the following is NOT typically an event that a graphics application's window system would handle?{
~Mouse button press or move event
~Window resize or refresh event
~Keyboard key press event
=File download complete event from a web browser
}

During rasterization in the pipeline:{
~The vertices of a primitive are connected to form edges.
=The primitive is converted into a set of fragments (potential pixels) covering its area, each with interpolated attributes (color, depth, etc.).
~The GPU computes lighting for each vertex.
~The depth test is performed on each triangle before generating fragments.
}

What is the role of glVertexAttribPointer (and the associated calls) in modern OpenGL?{
=It specifies how vertex data is laid out in memory (in a VBO) and connects it to a vertex shader attribute, so the GPU knows how to fetch vertex attributes.
~It issues a draw call for vertices stored in an array.
~It sets the pointer speed for mouse input (unrelated to graphics).
~It swaps the front and back framebuffers after drawing.
}

Which of the following transformations is NOT an affine transform (i.e., does not preserve straight lines and parallelism)?{
~Rotation
~Non-uniform scaling
~Translation
=Perspective projection
}

In a GLUT program, which function call is used to enter the event-processing loop, handing control over to GLUT to handle rendering and input callbacks?{
=glutMainLoop()
~glutPostRedisplay()
~glutInit()
~glutSwapBuffers()
}

Which pair of transformations are inverses of each other?{
=Translation by (+X) and translation by (-X)
~Rotation by +30° about Y and rotation by +30° about X
~Scaling by 2 in X and scaling by 2 in Y
~Shearing in X and a rotation in Z
}

What is the primary purpose of a depth buffer (Z-buffer) in rendering?{
=To store the depth (distance) of each fragment/pixel and ensure that for overlapping objects, only the closest surface's fragment is ultimately drawn (hidden surface removal).
~To hold the color of each pixel until display.
~To double the frame rate by storing an extra frame.
~To count how many fragments have been processed.
} 